name: Build and Package Fyne App

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Fyne App on ${{ matrix.arch }}
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    env:
      GOARCH: ${{ matrix.arch }}
      CC: /usr/bin/clang

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Install fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: List fyne installation
        run: ls -la $(go env GOPATH)/bin

      - name: Build Fyne App for Darwin ${{ matrix.arch }}
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=${{ matrix.arch }} go build -o textstorm
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            $(go env GOPATH)/bin/darwin_arm64/fyne package -os darwin -name "Textstorm" -icon big_icon.png --executable textstorm --appID se.stenstromen.textstorm --appVersion $VERSIONTAG --release
          else
            $(go env GOPATH)/bin/fyne package -os darwin -name "Textstorm" -icon big_icon.png --executable textstorm --appID se.stenstromen.textstorm --appVersion $VERSIONTAG --release
          fi
        env:
          VERSIONTAG: ${{ github.event.release.tag_name }}

      - name: Zip the Textstorm.app bundle for ${{ matrix.arch }}
        run: zip -r Textstorm-${{ matrix.arch }}.zip Textstorm.app

      - name: Upload Artifact for ${{ matrix.arch }}
        uses: actions/upload-artifact@v3
        with:
          name: Textstorm-MacOS-${{ matrix.arch }}
          path: Textstorm-${{ matrix.arch }}.zip
